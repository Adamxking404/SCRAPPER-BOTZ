import config from '../../config.cjs';

// Main command function
const anticallcommand = async (m, Matrix) => {
  const botNumber = await Matrix.decodeJid(Matrix.user.id);
  const isCreator = [botNumber, config.OWNER_NUMBER + '@s.whatsapp.net'].includes(m.sender);
  const prefix = config.PREFIX;
const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(' ')[0].toLowerCase() : '';
const text = m.body.slice(prefix.length + cmd.length).trim();

  if (cmd === 'anticall') {
    if (!isCreator) return m.reply("*üìõ ‡∂∏‡∑ô‡∂∫ OWNER ‡∑Ä‡∑í‡∂∞‡∑è‡∂±‡∂∫‡∂ö‡∑í*");
    let responseMessage;

    if (text === 'on') {
      config.REJECT_CALL = true;
      responseMessage = "Anti-Call ‡∑É‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì ‚úÖ.";
    } else if (text === 'off') {
      config.REJECT_CALL = false;
      responseMessage = "Anti-Call ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ω‡∂Ø‡∑ì ‚ùé.";
    } else {
      responseMessage = "Usage:\n- `.anticall on`: Anti-Call ‡∑É‡∂ö‡∑ä‚Äç‡∂ª‡∑ì‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß.\n- `.anticall off`: Anti-Call ‡∂Ö‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß.";
    }

    try {
      await Matrix.sendMessage(m.from, { text: responseMessage }, { quoted: m });
    } catch (error) {
      console.error("‚ùåError processing your request:\n‡∂î‡∂±‡∑ä‡∂± ‡∂ï‡∂ö ‡∂≠‡∂∏‡∂∫‡∑í ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∑ôü•≤", error);
      await Matrix.sendMessage(m.from, { text: 'Error processing your request.' }, { quoted: m });
    }
  }
};

export default anticallcommand;
